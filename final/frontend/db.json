{
    "posts": {
        "totalPost": 5,
        "mainTag": {
            "tag_identifier": "c-unix",
            "tag_displayName": "C / UNIX"
        },
        "posts": [
            {
                "post_id": 0,
                "post_author": {
                    "user_id": "pa3wrad",
                    "user_name": "不知名的小子"
                },
                "post_tags": [
                    {
                        "tag_isMainTag": true,
                        "tag_identifier": "c-unix",
                        "tag_displayName": "C / UNIX"
                    }
                ],
                "post_topic": "進程 exec 了設有 SUID 的程式，會改變進程的 EUID 嗎？",
                "post_sbody": "為方便大家閱讀，我把關鍵程式碼貼出 有如下 C 程式碼，編譯成程式 test {程式片段} 並設定 test 為 root 所有以及 SUID {程式片段} 有另外一個程式 fork，調用 exec 來執行 test {程式片段} 系統系統中普通用戶的 uid 為 1000，root 的 uid 為 0 個人覺得，輸出結果應該是： EUID0 因為 test 設置了 SUID，fork 在 exec 時應該會將有效用戶 ID",
                "post_createdAt": 1672297284560,
                "post_views": 0,
                "post_rates": 0,
                "post_commentCount": 0,
                "post_commentHasAdopt": false
            }, {
                "post_id": 1,
                "post_author": {
                    "user_id": "pa3wrad",
                    "user_name": "不知名的小子"
                },
                "post_tags": [
                    {
                        "tag_isMainTag": true,
                        "tag_identifier": "c-unix",
                        "tag_displayName": "C / UNIX"
                    }, {
                        "tag_isMainTag": false,
                        "tag_displayName": "SUID"
                    }, {
                        "tag_isMainTag": false,
                        "tag_displayName": "EUID"
                    }
                ],
                "post_topic": "進程 exec 了設有 SUID 的程式，會改變進程的 EUID 嗎？",
                "post_sbody": "為方便大家閱讀，我把關鍵程式碼貼出 有如下 C 程式碼，編譯成程式 test {程式片段} 並設定 test 為 root 所有以及 SUID {程式片段} 有另外一個程式 fork，調用 exec 來執行 test {程式片段} 系統系統中普通用戶的 uid 為 1000，root 的 uid 為 0 個人覺得，輸出結果應該是： EUID0 因為 test 設置了 SUID，fork 在 exec 時應該會將有效用戶 ID",
                "post_createdAt": 1672297266213,
                "post_views": 12,
                "post_rates": 6,
                "post_commentCount": 0,
                "post_commentHasAdopt": true
            }, {
                "post_id": 2,
                "post_author": {
                    "user_id": "pa3wrad",
                    "user_name": "不知名的小子"
                },
                "post_tags": [
                    {
                        "tag_isMainTag": true,
                        "tag_identifier": "c-unix",
                        "tag_displayName": "C / UNIX"
                    }, {
                        "tag_isMainTag": false,
                        "tag_displayName": "SUID"
                    }, {
                        "tag_isMainTag": false,
                        "tag_displayName": "EUID"
                    }
                ],
                "post_topic": "進程 exec 了設有 SUID 的程式，會改變進程的 EUID 嗎？",
                "post_sbody": "為方便大家閱讀，我把關鍵程式碼貼出 有如下 C 程式碼，編譯成程式 test {程式片段} 並設定 test 為 root 所有以及 SUID {程式片段} 有另外一個程式 fork，調用 exec 來執行 test {程式片段} 系統系統中普通用戶的 uid 為 1000，root 的 uid 為 0 個人覺得，輸出結果應該是： EUID0 因為 test 設置了 SUID，fork 在 exec 時應該會將有效用戶 ID",
                "post_createdAt": 1672297247891,
                "post_views": 46,
                "post_rates": 10,
                "post_commentCount": 2,
                "post_commentHasAdopt": false
            }, {
                "post_id": 3,
                "post_author": {
                    "user_id": "pa3wrad",
                    "user_name": "不知名的小子"
                },
                "post_tags": [
                    {
                        "tag_isMainTag": true,
                        "tag_identifier": "c-unix",
                        "tag_displayName": "C / UNIX"
                    }
                ],
                "post_topic": "進程 exec 了設有 SUID 的程式，會改變進程的 EUID 嗎？",
                "post_sbody": "為方便大家閱讀，我把關鍵程式碼貼出 有如下 C 程式碼，編譯成程式 test {程式片段} 並設定 test 為 root 所有以及 SUID {程式片段} 有另外一個程式 fork，調用 exec 來執行 test {程式片段} 系統系統中普通用戶的 uid 為 1000，root 的 uid 為 0 個人覺得，輸出結果應該是： EUID0 因為 test 設置了 SUID，fork 在 exec 時應該會將有效用戶 ID",
                "post_createdAt": 167229722162,
                "post_views": 9,
                "post_rates": -1,
                "post_commentCount": 7,
                "post_commentHasAdopt": false
            }, {
                "post_id": 4,
                "post_author": {
                    "user_id": "pa3wrad",
                    "user_name": "不知名的小子"
                },
                "post_tags": [
                    {
                        "tag_isMainTag": true,
                        "tag_identifier": "c-unix",
                        "tag_displayName": "C / UNIX"
                    }
                ],
                "post_topic": "進程 exec 了設有 SUID 的程式，會改變進程的 EUID 嗎？",
                "post_sbody": "為方便大家閱讀，我把關鍵程式碼貼出 有如下 C 程式碼，編譯成程式 test {程式片段} 並設定 test 為 root 所有以及 SUID {程式片段} 有另外一個程式 fork，調用 exec 來執行 test {程式片段} 系統系統中普通用戶的 uid 為 1000，root 的 uid 為 0 個人覺得，輸出結果應該是： EUID0 因為 test 設置了 SUID，fork 在 exec 時應該會將有效用戶 ID",
                "post_createdAt": 1672297200360,
                "post_views": 27,
                "post_rates": 8,
                "post_commentCount": 10,
                "post_commentHasAdopt": true
            }
        ]
    },
    "tags": {
        "following": [
            {
                "tag_identifier": "c-unix",
                "tag_displayName": "C / UNIX"
            }, {
                "tag_identifier": "js-react",
                "tag_displayName": "JS / React"
            }, {
                "tag_identifier": "python",
                "tag_displayName": "Python"
            }
        ],
        "trending": [
            {
                "tag_identifier": "js-vuejs",
                "tag_displayName": "JS / Vue.js"
            }, {
                "tag_identifier": "js-react",
                "tag_displayName": "JS / React"
            }, {
                "tag_identifier": "js-angular",
                "tag_displayName": "JS / Angular"
            }, {
                "tag_identifier": "ui-adobe-xd",
                "tag_displayName": "UI / Adobe XD"
            }
        ]
    },
    "post-1": {
        "post": {
            "post_id": 1,
            "post_author": {
                "user_id": "pa3wrad",
                "user_name": "不知名的小子"
            },
            "post_tags": [
                {
                    "tag_isMainTag": true,
                    "tag_identifier": "c-unix",
                    "tag_displayName": "C / UNIX"
                }, {
                    "tag_isMainTag": false,
                    "tag_displayName": "SUID"
                }, {
                    "tag_isMainTag": false,
                    "tag_displayName": "EUID"
                }
            ],
            "post_topic": "進程 exec 了設有 SUID 的程式，會改變進程的 EUID 嗎？",
            "post_fbody": "## Task Description ##\n\n作為實習員工的你，在前兩次由組織所策畫的項目中表現得相當傑出，大哥對此讚譽有加。於是，他決定指派你參與一項更大的計畫。正如組織的座右銘「Never settle for less」所言，接下來的計畫將會由包括你在內的團隊，策畫一系列的銀行搶劫案。與侵入民宅行竊相比，搶劫銀行可要複雜得多。  \n\n還好，負責偵察的隊員已經拿到了城市裡所有銀行的平面圖，以及每間銀行的保全系統的規格說明書。為了防止歹徒入侵，每間銀行的金庫都設有雷射裝置，而保全系統的規格說明書裡則詳細地列出了這些雷射器的具體位置。你的任務是按照這份說明書計算銀行裡有多少道雷射光束，讓你的伙伴能造出足夠數量的**特別裝置**。這種裝置能在不觸發警報的情況下，通過雷射光束的檢測。  \n\nhttps://cool.ntu.edu.tw\n\n和社區裡的住宅一樣，相鄰的兩間銀行的保全系統也是連通的。因此如果在同一個晚上，相鄰的兩間銀行的金庫都有被打開的話，警報就會響起，而相關單位也會接獲通報。  \n\n給定：一個整數 $N$，代表目標城市裡的銀行數量；一個包含 $N$ 個整數的數組 *money*，依序表示每間銀行金庫所存放的現金；一個 binary string 的陣列，以 $4\\times6$ 矩陣的形式表示每間銀行的雷射器位置。對於每行 binary string，*map[i]* 表示銀行的第 $i$ 列，由 *‘0’* 和 *‘1’* 組成，每位數字表示該列每一格的狀況：*‘0’* 表示該格為空，而 *‘1’* 則表示該格設有雷射器。  \n\n當兩個雷射器同時滿足以下條件，它們之間就會產生一束雷射光束：  \n\n1. 這兩個雷射器位處兩個不同的列 $r_1$ 和 $r_2$ 上，其中 $r_1 \\lt r_2$；  \n2. 這兩個雷射器所在的列之間的每一列，都沒有雷射器。   \n\n注意：任意兩條雷射光束之間都是獨立的，也就是說，它們不會合併或互相干預。  \n\n請你完成以下兩個函數：  \n函數 `beams`，用來找出每一間銀行的雷射光束數量；  \n函數 `rob`，計算在一個晚上裡，你們小隊最多能盜走的金額，並回傳要盜走前述金額所需**特別裝置的數量**。  \n\n以下的主程式會用來測試你所提交的函數：  \n\n```c\n#include <stdio.h>\n#include <string.h>\n#include \"function.h\"\nint main () {\n    int N;\n    scanf(\"%d\", &N);\n    int money[N], laser[N];\n    for (int i = 0; i < N; i++)\n        scanf(\"%d\", &money[i]);\n    for (int i = 0; i < N; i++) {\n        char spec[4][7];\n        for (int j = 0; j < 4; j++)\n            scanf(\"%s\", spec[j]);\n        laser[i] = beams(spec);\n    }\n    \n    int ans = rob(money, laser, N);\n    printf(\"%d\", ans);\n    return 0;\n}\n```\n        \n    ",
            "post_createdAt": 1672297266213,
            "post_like": 6,
            "post_dislike": 0,
            "post_userLiked": true,
            "post_userDisliked": false,
            "post_comment": [
                {
                    "comment_id": 0,
                    "comment_adopt": false,
                    "comment_body": "# 111-1-Web-Hackathon#1 -- Wordle\n## Prerequisite\n1. If you have not done [preREADME](https://hackmd.io/@anitalu724/BkUm1KBQj) yet, please check it out first.\n\n2. This in-class Hackathon is to implement a famous online puzzle game - Wordle. No matter you know how to play the game or not, please WATCH THIS INTRO VIDEO fist: [**Introduction video (MUST WATCH)**](https://www.youtube.com/watch?v=hTBUw2J_93s). It also explains how the code is designed and structured. \n\n3. Please sign in to Hackathon #1 thru this [Google Form](https://bit.ly/3gj6XNG). After you fill in your student ID, name, department and grade, you will see the link to the reference code. The downloaded file should be named \"**hack1.zip**\". Uncompress it and copy the files to the `wp1111/hack1` directory. (Note: If you see an extra `hack1` directory under `hack1`, copy the files under `hack1/hack1` instead.)\n\n4. Check the structure of the files/directories under `hack1` and it should be like this:\n!",
                    "comment_author": {
                        "user_id": "pa3wrad",
                        "user_name": "不知名的小子"
                    },
                    "comment_like": 1,
                    "comment_dislike": 0,
                    "comment_userLiked": false,
                    "comment_userDisliked": false,
                    "comment_createdAt": 1672494577902
                }, {
                    "comment_id": 1,
                    "comment_adopt": true,
                    "comment_body": "# HW4: React Exercise — MineSweeper \n\n同學你好！以下是此份作業的完成情況及簡介，請參考。\n\n另附上**由助教提供的**[示範影片](https://www.youtube.com/watch?v=mDx4bi-rA-Q)，以供參考。\n\n## 01 安裝並運行\n\n評閱本作業前，請先使用指令 `npm install` 安裝所需模組。\n\n安裝完成後，使用 `npm start` 進入開發模式 (Development Mode)。 \n\n之後，開啟 [http://localhost:3000](http://localhost:3000) 以在瀏覧器中預覽運行結果。  \n在同區塊網內其他裝置預覽，請開啟 [本裝置的區域網內IP]:3000。\n\n函數 `beams` 及 `rob` 的原型給定如下：\n```c\nint beams(char spec[4][7]);\nint rob(int *money, int *laser, int no_of_bank);\n```",
                    "comment_author": {
                        "user_id": "j3k1md9",
                        "user_name": "很有名的小子"
                    },
                    "comment_like": 5,
                    "comment_dislike": 0,
                    "comment_userLiked": true,
                    "comment_userDisliked": false,
                    "comment_createdAt": 1672297269713
                }, {
                    "comment_id": 2,
                    "comment_adopt": false,
                    "comment_body": "I want to over-ride the indent (supposed to be 2 spaces) to be 4 spaces. But no matter what I do within my .eslintrc I cannot get this error supressed so that I can use indentation of 4 spaces. I have the message “Expected indentation of 2 spaces chatacters but found 4. (react/jsx-indent)” everywhere within my code base.",
                    "comment_author": {
                        "user_id": "j3k1md9",
                        "user_name": "很有名的小子"
                    },
                    "comment_like": 3,
                    "comment_dislike": 1,
                    "comment_userLiked": false,
                    "comment_userDisliked": true,
                    "comment_createdAt": 1672490076530
                }
            ]
        }
    }
}